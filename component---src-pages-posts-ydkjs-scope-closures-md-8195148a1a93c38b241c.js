(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{"RP/g":function(e,a,t){"use strict";t.r(a),t.d(a,"_frontmatter",(function(){return c})),t.d(a,"default",(function(){return p}));t("rzGZ"),t("Dq+y"),t("8npG"),t("Ggvi"),t("E5k/"),t("q1tI");var n=t("7ljp");var c={layout:"post",title:"Вы не знаете JS. Область видимости и замыкания.",date:"2020-07-24",tags:["js"]},s={_frontmatter:c},m="wrapper";function p(e){var a=e.components,t=function(e,a){if(null==e)return{};var t,n,c={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||(c[t]=e[t]);return c}(e,["components"]);return Object(n.mdx)(m,Object.assign({},s,t,{components:a,mdxType:"MDXLayout"}),Object(n.mdx)("h1",null,"Области видимости и замыкания"),Object(n.mdx)("p",null,"Короткие, и надеюсь интересные, конспекты для систематизации знаний по JS после прочтения серии книг You Don't Know JS."),Object(n.mdx)("h2",null,"Разбираемся с областями видимости"),Object(n.mdx)("p",null,Object(n.mdx)("img",Object.assign({parentName:"p"},{src:"../../images/ydkjs-scope-closures/start.jpeg",alt:"start image"})),"\nЧто такое область видимости?"),Object(n.mdx)("p",null,"Основная функция любой программы заключается в возможности сохранять значения в переменных и при необходимости извлекать их. И переменные хранятся в области видимости (",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"scope"),")."),Object(n.mdx)("p",null,"В языках программирования, которые компилируются есть три основных этапа при работе с кодом, прежде чем он будет выполнен:"),Object(n.mdx)("p",null,"Токенизация. Разбитие кода на кусочки, которые несут значение -токены."),Object(n.mdx)("p",null,"Парсинг. Берем массив токенов и составляем из них абстрактное синтаксическое дерево.(AST — Abstract Syntax Tree)"),Object(n.mdx)("p",null,"Генерация кода.Берем AST и преобразуем его в исполняемый код (для работы с памятью и вот это всё)"),Object(n.mdx)("p",null,"У JS нет времени объяснять всё это, т.к. до исполнения кода, у JS есть лишь микросекунды на его обработку."),Object(n.mdx)("p",null,"Попробуем понять как работает область видимости."),Object(n.mdx)("h3",null,"Движок (Engine)"),Object(n.mdx)("p",null,"Image for post"),Object(n.mdx)("p",null,"Отвечает за начало и окончание интерпретации кода и выполнение программы."),Object(n.mdx)("h3",null,"Компилятор (Compiler)."),Object(n.mdx)("p",null,"Image for post"),Object(n.mdx)("p",null,"Один из друзей Движка. Делает грязную работу типа парсинга и генерации исполняемого кода."),Object(n.mdx)("h3",null,"Область видимости (Scope)."),Object(n.mdx)("p",null,"Image for post"),Object(n.mdx)("p",null,"Другой бро Движка: собирает и обслуживает список поиска всех объявленных идентификаторов (переменных)а также следит за соответствием правилам для исполняемого кода."),Object(n.mdx)("p",null,"На простом примере:"),Object(n.mdx)("div",{className:"gatsby-highlight","data-language":"js"},Object(n.mdx)("pre",Object.assign({parentName:"div"},{className:"language-js"}),Object(n.mdx)("code",Object.assign({parentName:"pre"},{className:"language-js"}),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"var")," a ",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token number"}),"2"),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";")))),Object(n.mdx)("p",null,"Что делает компилятор"),Object(n.mdx)("p",null,"Встретив ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"var a"),", компилятор спрашивает у области видимости: может такая переменная уже есть в области. И, если она уже есть, компилятор игнорит объявление переменной и едет дальше. Если же, такой переменной нет, компилятор просит создать новую переменную с именем ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"a")," у области видимости."),Object(n.mdx)("p",null,"Потом компилятор готовит код для движка, чтобы затем выполнить присвоение ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"a = 2")," . "),Object(n.mdx)("p",null,"При этом Движок должен уточнить у области видимости: если переменная есть в текущей области видимости, движок будет использовать именно ее. Если нет — Движок поищет ее где — нибудь еще."),Object(n.mdx)("p",null,"Если Движок ее не найдет, он прекратит поиски и сформирует ошибку."),Object(n.mdx)("p",null,"Движок может производить как левосторонний (LHS — Left Hand Side) так и правосторонний (RHS — Right Hand Side) поиск. "),Object(n.mdx)("p",null,"Поиск распределяется по отношению к оператору присвоения ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"=")," ."),Object(n.mdx)("div",{className:"gatsby-highlight","data-language":"js"},Object(n.mdx)("pre",Object.assign({parentName:"div"},{className:"language-js"}),Object(n.mdx)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"console",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token function"}),"log"),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"(")," a ",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token comment"}),"// правосторонний поиск"),"\na ",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token number"}),"2"),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";")," ",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token comment"}),"//левосторонний поиск"),"\n",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"function")," ",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token function"}),"foo"),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token parameter"}),"a"),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    console",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token function"}),"log"),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"(")," a ",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";")," ",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token comment"}),"// 2"),"\n",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token function"}),"foo"),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"(")," ",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token number"}),"2")," ",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token comment"}),"//1) RHS при вызове функции foo() "),"\n",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token comment"}),"//2)LHS при передаче аргумента a значения 2 происходит присвоение "),"\n",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token comment"}),"//a = 2;")))),Object(n.mdx)("p",null,"Представим разговор Движка и Области видимости:"),Object(n.mdx)("p",null,"Engine: Привет Scope, у меня тут RHS ссылка для ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"foo"),". Слышал про такое?"),Object(n.mdx)("p",null,"Scope: Да, конечно. Интерпретатор только что объявил ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"foo"),". Это функция. Вот она."),Object(n.mdx)("p",null,"Engine: Круто, спасибо! OK, выполняю ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"foo"),"."),Object(n.mdx)("p",null,"Engine: Слушай область видимости, тут еще LHS ссылка для ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"a"),", слышал о ней?"),Object(n.mdx)("p",null,"Scope: Да. Буквально только что интерпретатор объявил ее как параметр для ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"foo"),". Вот она."),Object(n.mdx)("p",null,"Engine: Как всегда кстати)). И снова спасибо. Пришло время присвоить значение 2 переменной a."),Object(n.mdx)("p",null,"Engine: Сорри за беспокойство. Мне нужно посмотреть RHS для ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"console"),". Не слышал?"),Object(n.mdx)("p",null,"Scope: Нет проблем, Engine, это то,что я делаю целый день. Да есть объект ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"console"),". Он встроенный. Вот пользуйся."),Object(n.mdx)("p",null,"Engine: Отлично. Поищем — ка ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"log(..)"),". OK, это функция."),Object(n.mdx)("p",null,"Engine: Йоу, Scope. Можешь помочь с RHS ссылкой на a.\nЯ вроде помню его, просто хотел еще раз уточнить."),Object(n.mdx)("p",null,"Scope: Да ты прав, Engine. Та же переменная, значение не изменилось. Можешь пользоваться."),Object(n.mdx)("p",null,"Engine: Круто, значит передаем значение 2 переменной ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"a"),", а ее затем функции ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"log(..)"),"."),Object(n.mdx)("p",null,"Также как функция или блок могут быть вложены в другой блок или функцию, области видимости могут быть вложенными."),Object(n.mdx)("div",{className:"gatsby-highlight","data-language":"js"},Object(n.mdx)("pre",Object.assign({parentName:"div"},{className:"language-js"}),Object(n.mdx)("code",Object.assign({parentName:"pre"},{className:"language-js"}),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"function")," ",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token function"}),"foo"),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token parameter"}),"a"),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    console",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token function"}),"log"),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"(")," a ",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token operator"}),"+")," b ",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"var")," b ",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token number"}),"2"),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token function"}),"foo"),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"(")," ",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token number"}),"2")," ",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";")," ",Object(n.mdx)("span",Object.assign({parentName:"code"},{className:"token comment"}),"// 4")))),Object(n.mdx)("p",null,"Engine: “Привет, Scope из функции ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"foo"),", слышал что нибудь про ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"b"),"? Только что получил RHS ссылку для него.”"),Object(n.mdx)("p",null,"Scope: “Не не слышал. Поищи в другом месте.”"),Object(n.mdx)("p",null,"Engine: “Хэй, Scope снаружи функции ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"foo"),", о да ты глобальный ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"scope"),", OK\nкруто. Слышал что нибудь про ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"b"),"? Только что получил RHS ссылку для него.”"),Object(n.mdx)("p",null,"Scope: “Да конечно. Вот — пользуйся.”"),Object(n.mdx)("p",null,Object(n.mdx)("strong",{parentName:"p"},"Итак, движок будет искать ссылку начиная с текущей области видимости и заканчивая глобальной.")),Object(n.mdx)("p",null,"Если же, и в глобальной области ссылка не будет найдена, то, в зависимости от того какую ссылку мы ищем, RHS или LHS, могут быть разные результаты."),Object(n.mdx)("p",null,"Если поиск идет по RHS ссылке, то есть по правой стороне, и переменная не найдена, то мы получим ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"ReferenceError"),"."),Object(n.mdx)("p",null,"Если поиск идет по LHS ссылке, то есть по левой стороне и переменная не найдена, то все зависит от того, используем мы ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"StrictMode")," или нет."),Object(n.mdx)("p",null,"Если не используем ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"StrictMode"),", то в глобальной области будет создана переменная с указанным именем и передана движку. "),Object(n.mdx)("p",null,"Если же включен ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"StrictMode"),", то мы также получим ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"Reference Error"),"."),Object(n.mdx)("p",null,"Ну, а если поиск по RHS увенчался успехом, но мы пытаемся сделать с результатами поиска что нибудь противоестественное. "),Object(n.mdx)("p",null,"Например, использовать нефункцию как функцию, или ссылаться на свойства, значения которых ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"null")," или ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"undefined"),", то мы получим ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"TypeError"),"."),Object(n.mdx)("h2",null,"Лексическая область видимости."),Object(n.mdx)("p",null,"В языках программирования используется два вида областей видимости: лексическая и динамическая. Для JS используется лексическая область видимости."),Object(n.mdx)("p",null,"В приведенном выше примере кода, движок выполнит ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"console.log()"),", а значит будет искать три переменные ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"a"),", ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"b")," и ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"c")," . "),Object(n.mdx)("p",null,"Движок начнет искать с самой глубокой области видимости — области видимости функции ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"bar()")," . "),Object(n.mdx)("p",null,"Поскольку переменной ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"a")," нет в области видимости функции ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"bar()")," , поиск перейдет на ближайшую область видимости — область видимости функции ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"foo()")," . "),Object(n.mdx)("p",null,"То же самое для переменной ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"b")," . "),Object(n.mdx)("p",null,"Ну а ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"c")," будет найдена в области видимости ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"bar()")," . "),Object(n.mdx)("p",null,"Если ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"a")," и ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"c")," будут также объявлены в ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"bar()"),", то при поиске мы не попадем в область функции ",Object(n.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"foo()")," . Поиск всегда останавливается как только найдет первый результат."),Object(n.mdx)("p",null,Object(n.mdx)("strong",{parentName:"p"},"Неважно где, и каким образом функция вызывается, лексическая область видимости всегда определяется там, где функция была объявлена.")))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-posts-ydkjs-scope-closures-md-8195148a1a93c38b241c.js.map
(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{ZyDG:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return p})),n.d(t,"default",(function(){return i}));n("rzGZ"),n("Dq+y"),n("8npG"),n("Ggvi"),n("E5k/"),n("q1tI");var a=n("7ljp");var p={title:"Разбираемся с процессом авторизации в passport.js",date:"2020-10-04",tags:["js"]},r={_frontmatter:p},m="wrapper";function i(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,p={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(p[n]=e[n]);return p}(e,["components"]);return Object(a.mdx)(m,Object.assign({},r,n,{components:t,mdxType:"MDXLayout"}),Object(a.mdx)("h1",null,"Разбираемся с процессом авторизации в ",Object(a.mdx)("inlineCode",{parentName:"h1"},"passport.js")),Object(a.mdx)("p",null,"Перевод статьи ",Object(a.mdx)("a",Object.assign({parentName:"p"},{href:"http://toon.io/understanding-passportjs-authentication-flow/"}),"Understanding passport.js authentication flow")),Object(a.mdx)("p",null,"Passport.js - миддлвар для авторизации (позволяющий пользователям логиниться), кооторый может быть полностью кастомизирован и отлично работает в связке с connect/express."),Object(a.mdx)("p",null,"Он является довольно гибким в том смысле, что позволяет использовать разные стратегии авторизации (допустим через Twitter, или с помощью собственной базы данных - за счет установки отдельных модулей и их комбинирования), а также ",Object(a.mdx)("strong",{parentName:"p"},"passport.js")," позволяет определить маршрут или вывод результата авторизации."),Object(a.mdx)("p",null,"Стратегия ",Object(a.mdx)("strong",{parentName:"p"},Object(a.mdx)("inlineCode",{parentName:"strong"},"Local Strategy"))," позволяет пользователям авторизоваться, используя базу данных приложения. Для этих случаев есть несколько отличных примеров."),Object(a.mdx)("p",null,"В этой статье, мы разберемся с процессом авторизации, а в следующей разберем несколько практических сценариев использования ",Object(a.mdx)("strong",{parentName:"p"},Object(a.mdx)("inlineCode",{parentName:"strong"},"passportjs")),"."),Object(a.mdx)("h2",null,"Основные моменты при использовании ",Object(a.mdx)("inlineCode",{parentName:"h2"},"passport.js")),Object(a.mdx)("p",null,"Есть 3 момента при использовании ",Object(a.mdx)("strong",{parentName:"p"},Object(a.mdx)("inlineCode",{parentName:"strong"},"passport.js")),":"),Object(a.mdx)("ol",null,Object(a.mdx)("li",{parentName:"ol"},"Импортируем модуль и вызываем методы ",Object(a.mdx)("inlineCode",{parentName:"li"},"passport.initialize()")," и ",Object(a.mdx)("inlineCode",{parentName:"li"},"passport.session()")," для миддлвары express."),Object(a.mdx)("li",{parentName:"ol"},"Настраиваем для ",Object(a.mdx)("inlineCode",{parentName:"li"},"passport")," хотя бы одну стратегию ",Object(a.mdx)("inlineCode",{parentName:"li"},"Strategy")," и подключаем методы ",Object(a.mdx)("inlineCode",{parentName:"li"},"passport")," ",Object(a.mdx)("inlineCode",{parentName:"li"},"serializeUser")," and ",Object(a.mdx)("inlineCode",{parentName:"li"},"deserializeUser"),"."),Object(a.mdx)("li",{parentName:"ol"},"Определяем маршрут, в котором будем использовать миддлвар ",Object(a.mdx)("inlineCode",{parentName:"li"},"passport.authenticate")," непосредственно для авторизации пользователя.")),Object(a.mdx)("p",null,"Примеры в документации достаточно ясно показывают использование этих методов. Поэтому,подробнее здесь мы их не рассматриваем."),Object(a.mdx)("h2",null,"Процесс запроса на авторизацию"),Object(a.mdx)("p",null,"Итак, если мы верно настроили ",Object(a.mdx)("inlineCode",{parentName:"p"},"passportjs"),", согласно примеру выше, то при попытке пользователя авторизоваться по маршруту ",Object(a.mdx)("a",Object.assign({parentName:"p"},{href:"/dev-docs/login"}),"/login"),", произойдет следующее:"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"Когда пользователь отправит данные формы авторизации, ",Object(a.mdx)("inlineCode",{parentName:"li"},"POST")," запрос к маршруту ",Object(a.mdx)("a",Object.assign({parentName:"li"},{href:"/dev-docs/login"}),"/login")," вызовет выполнение мидлвар ",Object(a.mdx)("inlineCode",{parentName:"li"},"passport.authenticate"),", который мы подключили.\n"),Object(a.mdx)("li",{parentName:"ul"},"Поскольку миддлвар авторизации для этого маршрута настроен на использование стратегии ",Object(a.mdx)("inlineCode",{parentName:"li"},"LocalStrategy"),", ",Object(a.mdx)("inlineCode",{parentName:"li"},"passport")," вызовет нашу реализацию ",Object(a.mdx)("inlineCode",{parentName:"li"},"LocalStrategy"),".\n"),Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("inlineCode",{parentName:"li"},"Passport")," возьмет из запроса ",Object(a.mdx)("inlineCode",{parentName:"li"},"req.body.username")," и ",Object(a.mdx)("inlineCode",{parentName:"li"},"req.body.password")," и передаст их нашей функции проверки авторизации в ",Object(a.mdx)("inlineCode",{parentName:"li"},"LocalStrategy"),".\n"),Object(a.mdx)("li",{parentName:"ul"},"Теперь займемся своими делами: загрузим данные пользователя из базы данных и проверим совпадают ли пароли.\n")),Object(a.mdx)("p",null,"В случае если при взаимодействии с базой данных сработает ошибка, нам нужно передать ее методу ",Object(a.mdx)("inlineCode",{parentName:"p"},"done(err)"),". "),Object(a.mdx)("p",null,"Когда мы не можем найти пользователя или пароли не совпали, мы вызываем ",Object(a.mdx)("inlineCode",{parentName:"p"},"done(null, false)"),". "),Object(a.mdx)("p",null,"Если же все прошло хорошо, и мы хотим залогинить пользователя, вызываем ",Object(a.mdx)("inlineCode",{parentName:"p"},"done(null, user)"),"."),Object(a.mdx)("p",null,"Вызов ",Object(a.mdx)("inlineCode",{parentName:"p"},"done")," позволит последовательности авторизации перепрыгнуть обратно в ",Object(a.mdx)("inlineCode",{parentName:"p"},"passport.authenticate"),". Передаются ошибка ",Object(a.mdx)("inlineCode",{parentName:"p"},"error"),", ",Object(a.mdx)("inlineCode",{parentName:"p"},"user")," и объект с дополнительной информацией (если он был определен)."),Object(a.mdx)("p",null,"Если объект ",Object(a.mdx)("inlineCode",{parentName:"p"},"user")," был передан, миддлвар  вызовет ",Object(a.mdx)("inlineCode",{parentName:"p"},"req.login")," (метод ",Object(a.mdx)("inlineCode",{parentName:"p"},"passport"),", добавленный к запросу ",Object(a.mdx)("inlineCode",{parentName:"p"},"request"),")."),Object(a.mdx)("p",null,"Это приведет к вызову  метода ",Object(a.mdx)("inlineCode",{parentName:"p"},"passport.serializeUser"),", который мы определили ранее. "),Object(a.mdx)("p",null,"Этот метод имеет доступ к объекту ",Object(a.mdx)("inlineCode",{parentName:"p"},"user"),", который мы передали в миддлвар."),Object(a.mdx)("p",null,"Его работа заключается в том, чтобы определить, какие данные объекта ",Object(a.mdx)("inlineCode",{parentName:"p"},"user")," должны быть записаны в сессии ",Object(a.mdx)("inlineCode",{parentName:"p"},"session"),". "),Object(a.mdx)("p",null,"Результат выполнения метода ",Object(a.mdx)("inlineCode",{parentName:"p"},"serializeUser")," прикрепляется к сессии: "),Object(a.mdx)("pre",{className:"shiki",style:{backgroundColor:"#0F111A"}},Object(a.mdx)("code",{parentName:"pre"},Object(a.mdx)("span",Object.assign({parentName:"code"},{style:{color:"#8F93A2"}}),"req"),Object(a.mdx)("span",Object.assign({parentName:"code"},{style:{color:"#89DDFF"}}),"."),Object(a.mdx)("span",Object.assign({parentName:"code"},{style:{color:"#8F93A2"}}),"session"),Object(a.mdx)("span",Object.assign({parentName:"code"},{style:{color:"#89DDFF"}}),"."),Object(a.mdx)("span",Object.assign({parentName:"code"},{style:{color:"#8F93A2"}}),"passport"),Object(a.mdx)("span",Object.assign({parentName:"code"},{style:{color:"#89DDFF"}}),"."),Object(a.mdx)("span",Object.assign({parentName:"code"},{style:{color:"#8F93A2"}}),"user"),Object(a.mdx)("span",Object.assign({parentName:"code"},{style:{color:"#FFFFFF"}})," "),Object(a.mdx)("span",Object.assign({parentName:"code"},{style:{color:"#C792EA"}}),"="),Object(a.mdx)("span",Object.assign({parentName:"code"},{style:{color:"#FFFFFF"}})," "),Object(a.mdx)("span",Object.assign({parentName:"code"},{style:{color:"#89DDFF"}}),"{"),Object(a.mdx)("span",Object.assign({parentName:"code"},{style:{color:"#FFFFFF"}})," "),Object(a.mdx)("span",Object.assign({parentName:"code"},{style:{color:"#464B5D"}}),"// our serialised user object // }."))),Object(a.mdx)("p",null,"Результат также прикреплен к запросу: ",Object(a.mdx)("inlineCode",{parentName:"p"},"req.user"),"."),Object(a.mdx)("p",null,"Когда все это выполнено, вызывается наш обработчик запросов ",Object(a.mdx)("inlineCode",{parentName:"p"},"requestHandler"),". В данном примере поьзоватеь будет перенаправлен на стартовую страницу."),Object(a.mdx)("h2",null,"Последовательность последующих запросов авторизации"),Object(a.mdx)("p",null,"При последующих запросах, произодет следующее:"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("p",{parentName:"li"},Object(a.mdx)("strong",{parentName:"p"},"Express")," загрузит данные сессии и прикрепит их к запросу ",Object(a.mdx)("inlineCode",{parentName:"p"},"req"),". Так как ",Object(a.mdx)("strong",{parentName:"p"},"passport")," записал выбранные данные пользователя в сессию, сериализованный объект ",Object(a.mdx)("inlineCode",{parentName:"p"},"user")," можно будет найти в ",Object(a.mdx)("inlineCode",{parentName:"p"},"req.session.passport.user"),".")),Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("p",{parentName:"li"},"Основной миддлвар ",Object(a.mdx)("inlineCode",{parentName:"p"},"passport"),", который мы настроили (",Object(a.mdx)("strong",{parentName:"p"},Object(a.mdx)("inlineCode",{parentName:"strong"},"passport.initialize")),") будет вызван при запросе, он найдет ",Object(a.mdx)("inlineCode",{parentName:"p"},"passport.user")," прикрепленный к сессии. Если он отсутствует (пользователь еще не авторизовался), то будет создан в следующем виде: ",Object(a.mdx)("inlineCode",{parentName:"p"},"req.passport.user = {}"),".")),Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("p",{parentName:"li"},"Затем, будет вызван ",Object(a.mdx)("inlineCode",{parentName:"p"},"passport.session"),". Этот миддлвар - часть стратегии ",Object(a.mdx)("inlineCode",{parentName:"p"},"Passport Strategy"),", вызываемой при каждом запросе. Если он найдет сериализованный объект пользователя ",Object(a.mdx)("inlineCode",{parentName:"p"},"user")," в сессии, он решит, что запрос ",Object(a.mdx)("inlineCode",{parentName:"p"},"request")," авторизован.")),Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("p",{parentName:"li"},"Миддлвар ",Object(a.mdx)("inlineCode",{parentName:"p"},"passport.session")," вызовет ",Object(a.mdx)("inlineCode",{parentName:"p"},"passport.deserializeUser"),", который мы добавили ранее. Тем самым, прикрепляя загруженный объект ",Object(a.mdx)("inlineCode",{parentName:"p"},"user")," к запросу в виде ",Object(a.mdx)("inlineCode",{parentName:"p"},"req.user"),"."))),Object(a.mdx)("h2",null,"Итого: все методы и мидллвары ",Object(a.mdx)("inlineCode",{parentName:"h2"},"passport")),Object(a.mdx)("ol",null,Object(a.mdx)("li",{parentName:"ol"},Object(a.mdx)("p",{parentName:"li"},Object(a.mdx)("strong",{parentName:"p"},Object(a.mdx)("inlineCode",{parentName:"strong"},"passport.initialize"))," миддлвар вызывается на каждый запрос. Убеждается что сессия содержит ",Object(a.mdx)("inlineCode",{parentName:"p"},"passport.user objec t"),", который может быть пустым.")),Object(a.mdx)("li",{parentName:"ol"},Object(a.mdx)("p",{parentName:"li"},Object(a.mdx)("strong",{parentName:"p"},Object(a.mdx)("inlineCode",{parentName:"strong"},"passport.session"))," миддлвар - часть стратегии ",Object(a.mdx)("inlineCode",{parentName:"p"},"Passport Strategy"),": загружает объект пользователя ",Object(a.mdx)("inlineCode",{parentName:"p"},"user")," в ",Object(a.mdx)("inlineCode",{parentName:"p"},"req.user")," , если сериализованный объект найден на сервере.")),Object(a.mdx)("li",{parentName:"ol"},Object(a.mdx)("p",{parentName:"li"},Object(a.mdx)("strong",{parentName:"p"},Object(a.mdx)("inlineCode",{parentName:"strong"},"passport.deserializeUser"))," вызывается на каждый запрос из миддлвара ",Object(a.mdx)("strong",{parentName:"p"},Object(a.mdx)("inlineCode",{parentName:"strong"},"passport.session")),". Это позволяет нам подгружать дополнительную информацию поьзователя при каждом запросе. Этот объект пользователя ",Object(a.mdx)("inlineCode",{parentName:"p"},"user")," будет прикреплен к запросу в виде ",Object(a.mdx)("inlineCode",{parentName:"p"},"req.user"),", чтобы можно было получить к нему доступ при обработке запросов.")),Object(a.mdx)("li",{parentName:"ol"},Object(a.mdx)("p",{parentName:"li"},"Наша локальная стратегия ",Object(a.mdx)("inlineCode",{parentName:"p"},"Local Strategy")," вызывается только при использовании маршрута который содержит миддлвар ",Object(a.mdx)("strong",{parentName:"p"},Object(a.mdx)("inlineCode",{parentName:"strong"},"passport.authenticate")),".")),Object(a.mdx)("li",{parentName:"ol"},Object(a.mdx)("p",{parentName:"li"},"Только при авторизации вызывается ",Object(a.mdx)("strong",{parentName:"p"},Object(a.mdx)("inlineCode",{parentName:"strong"},"passport.serializeUser"))," позволяя нам определить какая информция пользователя будет записана в сессии."))),Object(a.mdx)("h4",null,"Методы ",Object(a.mdx)("inlineCode",{parentName:"h4"},"passport")," прикрепленные к запросу  ",Object(a.mdx)("inlineCode",{parentName:"h4"},"request")),Object(a.mdx)("p",null,"Ну и наконец обзор методов ",Object(a.mdx)("inlineCode",{parentName:"p"},"passport")," доступных внутри обработчиков запросов:"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("inlineCode",{parentName:"li"},"req.login()")),Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("inlineCode",{parentName:"li"},"req.logout()")),Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("inlineCode",{parentName:"li"},"req.isAuthenticated()")),Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("inlineCode",{parentName:"li"},"req.isUnAuthenticated()"))))}i.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-posts-understanding-passport-js-md-3c91712bb8a7bde748ab.js.map
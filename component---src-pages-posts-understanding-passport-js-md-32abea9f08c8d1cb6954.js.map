{"version":3,"sources":["webpack:///./src/pages/posts/understanding-passport-js.md"],"names":["_frontmatter","layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-posts-understanding-passport-js-md-32abea9f08c8d1cb6954.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Разбираемся с процессом авторизации в passport.js\",\n  \"date\": \"2020-10-04\",\n  \"tags\": [\"js\"]\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Разбираемся с процессом авторизации в `}<code parentName=\"h1\" {...{\n        \"className\": \"language-text\"\n      }}>{`passport.js`}</code></h1>\n    <p>{`Перевод статьи `}<a parentName=\"p\" {...{\n        \"href\": \"http://toon.io/understanding-passportjs-authentication-flow/\"\n      }}>{`Understanding passport.js authentication flow`}</a></p>\n    <p>{`Passport.js - миддлвар для авторизации (позволяющий пользователям логиниться), кооторый может быть полностью кастомизирован и отлично работает в связке с connect/express.`}</p>\n    <p>{`Он является довольно гибким в том смысле, что позволяет использовать разные стратегии авторизации (допустим через Twitter, или с помощью собственной базы данных - за счет установки отдельных модулей и их комбинирования), а также `}<strong parentName=\"p\">{`passport.js`}</strong>{` позволяет определить маршрут или вывод результата авторизации.`}</p>\n    <p>{`Стратегия `}<strong parentName=\"p\"><code parentName=\"strong\" {...{\n          \"className\": \"language-text\"\n        }}>{`Local Strategy`}</code></strong>{` позволяет пользователям авторизоваться, используя базу данных приложения. Для этих случаев есть несколько отличных примеров.`}</p>\n    <p>{`В этой статье, мы разберемся с процессом авторизации, а в следующей разберем несколько практических сценариев использования `}<strong parentName=\"p\"><code parentName=\"strong\" {...{\n          \"className\": \"language-text\"\n        }}>{`passportjs`}</code></strong>{`.`}</p>\n    <h2>{`Основные моменты при использовании `}<code parentName=\"h2\" {...{\n        \"className\": \"language-text\"\n      }}>{`passport.js`}</code></h2>\n    <p>{`Есть 3 момента при использовании `}<strong parentName=\"p\"><code parentName=\"strong\" {...{\n          \"className\": \"language-text\"\n        }}>{`passport.js`}</code></strong>{`:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Импортируем модуль и вызываем методы `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`passport.initialize()`}</code>{` и `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`passport.session()`}</code>{` для миддлвары express.`}</li>\n      <li parentName=\"ol\">{`Настраиваем для `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`passport`}</code>{` хотя бы одну стратегию `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`Strategy`}</code>{` и подключаем методы `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`passport`}</code>{` `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`serializeUser`}</code>{` and `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`deserializeUser`}</code>{`.`}</li>\n      <li parentName=\"ol\">{`Определяем маршрут, в котором будем использовать миддлвар `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`passport.authenticate`}</code>{` непосредственно для авторизации пользователя.`}</li>\n    </ol>\n    <p>{`Примеры в документации достаточно ясно показывают использование этих методов. Поэтому,подробнее здесь мы их не рассматриваем.`}</p>\n    <h2>{`Процесс запроса на авторизацию`}</h2>\n    <p>{`Итак, если мы верно настроили `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`passportjs`}</code>{`, согласно примеру выше, то при попытке пользователя авторизоваться по маршруту `}<a parentName=\"p\" {...{\n        \"href\": \"/dev-docs/login\"\n      }}>{`/login`}</a>{`, произойдет следующее:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Когда пользователь отправит данные формы авторизации, `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`POST`}</code>{` запрос к маршруту `}<a parentName=\"li\" {...{\n          \"href\": \"/dev-docs/login\"\n        }}>{`/login`}</a>{` вызовет выполнение мидлвар `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`passport.authenticate`}</code>{`, который мы подключили.\n`}</li>\n      <li parentName=\"ul\">{`Поскольку миддлвар авторизации для этого маршрута настроен на использование стратегии `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`LocalStrategy`}</code>{`, `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`passport`}</code>{` вызовет нашу реализацию `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`LocalStrategy`}</code>{`.\n`}</li>\n      <li parentName=\"ul\"><code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`Passport`}</code>{` возьмет из запроса `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`req.body.username`}</code>{` и `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`req.body.password`}</code>{` и передаст их нашей функции проверки авторизации в `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`LocalStrategy`}</code>{`.\n`}</li>\n      <li parentName=\"ul\">{`Теперь займемся своими делами: загрузим данные пользователя из базы данных и проверим совпадают ли пароли.\n`}</li>\n    </ul>\n    <p>{`В случае если при взаимодействии с базой данных сработает ошибка, нам нужно передать ее методу `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`done(err)`}</code>{`. `}</p>\n    <p>{`Когда мы не можем найти пользователя или пароли не совпали, мы вызываем `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`done(null, false)`}</code>{`. `}</p>\n    <p>{`Если же все прошло хорошо, и мы хотим залогинить пользователя, вызываем `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`done(null, user)`}</code>{`.`}</p>\n    <p>{`Вызов `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`done`}</code>{` позволит последовательности авторизации перепрыгнуть обратно в `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`passport.authenticate`}</code>{`. Передаются ошибка `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`error`}</code>{`, `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`user`}</code>{` и объект с дополнительной информацией (если он был определен).`}</p>\n    <p>{`Если объект `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`user`}</code>{` был передан, миддлвар  вызовет `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`req.login`}</code>{` (метод `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`passport`}</code>{`, добавленный к запросу `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`request`}</code>{`).`}</p>\n    <p>{`Это приведет к вызову  метода `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`passport.serializeUser`}</code>{`, который мы определили ранее. `}</p>\n    <p>{`Этот метод имеет доступ к объекту `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`user`}</code>{`, который мы передали в миддлвар.`}</p>\n    <p>{`Его работа заключается в том, чтобы определить, какие данные объекта `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`user`}</code>{` должны быть записаны в сессии `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`session`}</code>{`. `}</p>\n    <p>{`Результат выполнения метода `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`serializeUser`}</code>{` прикрепляется к сессии: `}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"js\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-js\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}>{`req`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`session`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`passport`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`user `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// our serialised user object // }.`}</span></code></pre></div>\n    <p>{`Результат также прикреплен к запросу: `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`req.user`}</code>{`.`}</p>\n    <p>{`Когда все это выполнено, вызывается наш обработчик запросов `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`requestHandler`}</code>{`. В данном примере поьзоватеь будет перенаправлен на стартовую страницу.`}</p>\n    <h2>{`Последовательность последующих запросов авторизации`}</h2>\n    <p>{`При последующих запросах, произодет следующее:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Express`}</strong>{` загрузит данные сессии и прикрепит их к запросу `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`req`}</code>{`. Так как `}<strong parentName=\"p\">{`passport`}</strong>{` записал выбранные данные пользователя в сессию, сериализованный объект `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`user`}</code>{` можно будет найти в `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`req.session.passport.user`}</code>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Основной миддлвар `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`passport`}</code>{`, который мы настроили (`}<strong parentName=\"p\"><code parentName=\"strong\" {...{\n              \"className\": \"language-text\"\n            }}>{`passport.initialize`}</code></strong>{`) будет вызван при запросе, он найдет `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`passport.user`}</code>{` прикрепленный к сессии. Если он отсутствует (пользователь еще не авторизовался), то будет создан в следующем виде: `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`req.passport.user = {}`}</code>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Затем, будет вызван `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`passport.session`}</code>{`. Этот миддлвар - часть стратегии `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`Passport Strategy`}</code>{`, вызываемой при каждом запросе. Если он найдет сериализованный объект пользователя `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`user`}</code>{` в сессии, он решит, что запрос `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`request`}</code>{` авторизован.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Миддлвар `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`passport.session`}</code>{` вызовет `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`passport.deserializeUser`}</code>{`, который мы добавили ранее. Тем самым, прикрепляя загруженный объект `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`user`}</code>{` к запросу в виде `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`req.user`}</code>{`.`}</p>\n      </li>\n    </ul>\n    <h2>{`Итого: все методы и мидллвары `}<code parentName=\"h2\" {...{\n        \"className\": \"language-text\"\n      }}>{`passport`}</code></h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\"><code parentName=\"strong\" {...{\n              \"className\": \"language-text\"\n            }}>{`passport.initialize`}</code></strong>{` миддлвар вызывается на каждый запрос. Убеждается что сессия содержит `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`passport.user objec t`}</code>{`, который может быть пустым.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\"><code parentName=\"strong\" {...{\n              \"className\": \"language-text\"\n            }}>{`passport.session`}</code></strong>{` миддлвар - часть стратегии `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`Passport Strategy`}</code>{`: загружает объект пользователя `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`user`}</code>{` в `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`req.user`}</code>{` , если сериализованный объект найден на сервере.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\"><code parentName=\"strong\" {...{\n              \"className\": \"language-text\"\n            }}>{`passport.deserializeUser`}</code></strong>{` вызывается на каждый запрос из миддлвара `}<strong parentName=\"p\"><code parentName=\"strong\" {...{\n              \"className\": \"language-text\"\n            }}>{`passport.session`}</code></strong>{`. Это позволяет нам подгружать дополнительную информацию поьзователя при каждом запросе. Этот объект пользователя `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`user`}</code>{` будет прикреплен к запросу в виде `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`req.user`}</code>{`, чтобы можно было получить к нему доступ при обработке запросов.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Наша локальная стратегия `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`Local Strategy`}</code>{` вызывается только при использовании маршрута который содержит миддлвар `}<strong parentName=\"p\"><code parentName=\"strong\" {...{\n              \"className\": \"language-text\"\n            }}>{`passport.authenticate`}</code></strong>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Только при авторизации вызывается `}<strong parentName=\"p\"><code parentName=\"strong\" {...{\n              \"className\": \"language-text\"\n            }}>{`passport.serializeUser`}</code></strong>{` позволяя нам определить какая информция пользователя будет записана в сессии.`}</p>\n      </li>\n    </ol>\n    <h4>{`Методы `}<code parentName=\"h4\" {...{\n        \"className\": \"language-text\"\n      }}>{`passport`}</code>{` прикрепленные к запросу  `}<code parentName=\"h4\" {...{\n        \"className\": \"language-text\"\n      }}>{`request`}</code></h4>\n    <p>{`Ну и наконец обзор методов `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`passport`}</code>{` доступных внутри обработчиков запросов:`}</p>\n    <ul>\n      <li parentName=\"ul\"><code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`req.login()`}</code></li>\n      <li parentName=\"ul\"><code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`req.logout()`}</code></li>\n      <li parentName=\"ul\"><code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`req.isAuthenticated()`}</code></li>\n      <li parentName=\"ul\"><code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`req.isUnAuthenticated()`}</code></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}
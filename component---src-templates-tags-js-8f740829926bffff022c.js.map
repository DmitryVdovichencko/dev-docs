{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/templates/tags.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Header","siteTitle","className","HeaderStyles","header","to","role","aria-label","nav","nav__item","defaultProps","Layout","children","data","LayoutStyles","layout","site","siteMetadata","title","content","content__posts","Date","getFullYear","href","Tags","pageContext","tag","allMdx","edges","totalCount","tagHeader","map","node","index","key","fields","slug","frontmatter","date","pageQuery","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"uLAKMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,4BAAQC,UAAWC,IAAaC,QAC5B,4BACE,kBAAC,IAAD,CAAMC,GAAG,KACP,8BAAUJ,EAAV,SACA,0BAAMK,KAAK,MAAMC,aAAW,QAA5B,MACA,0BAAMD,KAAK,MAAMC,aAAW,QAA5B,MACA,0BAAMD,KAAK,MAAMC,aAAW,gBAA5B,MACA,0BAAMD,KAAK,MAAMC,aAAW,YAA5B,QAGJ,yBAAKL,UAAWC,IAAaK,KAC3B,yBAAKN,UAAWC,IAAaM,WAAW,kBAAC,IAAD,CAAMJ,GAAG,YAAT,eACxC,yBAAKH,UAAWC,IAAaM,WAAW,kBAAC,IAAD,CAAMJ,GAAG,eAAT,UACxC,yBAAKH,UAAWC,IAAaM,WAAW,kBAAC,IAAD,CAAMJ,GAAG,eAAT,UAC5C,yBAAKH,UAAWC,IAAaM,WAAW,kBAAC,IAAD,CAAMJ,GAAG,UAAT,aAS5CL,EAAOU,aAAe,CACpBT,UAAU,IAGGD,QCWAW,IA9BA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OAUV,OACE,yBAAKX,UAAS,iBAAmBY,IAAaC,QAC5C,kBAAC,EAAD,CAAQd,UAAWY,EAAKG,KAAKC,aAAaC,QAC1C,yBAAKhB,UAAWY,IAAaK,SAC3B,0BAAMjB,UAAWY,IAAaM,gBAAiBR,GAC/C,sCACK,IAAIS,MAAOC,cADhB,mBAGE,uBAAGC,KAAK,4BAAR,e,qJCjCV,kGAmCeC,UA7BF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaZ,EAAW,EAAXA,KACnBa,EAAQD,EAARC,IAD8B,EAERb,EAAKc,OAA3BC,EAF8B,EAE9BA,MAAOC,EAFuB,EAEvBA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAIf,OACE,kBAAC,IAAD,KACE,4BAAKI,GAEL,6BACGF,EAAMG,KAAI,YAAsB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAClB,OACE,6BACE,kBAAC,IAAD,CAAMC,IAAKD,EAAO5B,GAAI2B,EAAKG,OAAOC,MAC/BJ,EAAKK,YAAYnB,OAEpB,2BAAIc,EAAKK,YAAYC,UAK3B,kBAAC,IAAD,CAAMjC,GAAG,SAAT,eAQD,IAAMkC,EAAS,c,kCCrCtB,sGAcyBC,QAAOC,QAELC,IAAMC,cAAc,K,qBChB/C,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,geCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGET,IAAMU,cAAcC,I,+VAApB,EACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-templates-tags-js-8f740829926bffff022c.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport HeaderStyles from \"./header.module.scss\"\n\nconst Header = ({ siteTitle }) => (\n  <header className={HeaderStyles.header}>\n      <h1>\n        <Link to=\"/\">\n          <span>{`${siteTitle} `} </span>\n          <span role=\"img\" aria-label=\"memo\">üìù</span>\n          <span role=\"img\" aria-label=\"book\">üìñ</span>\n          <span role=\"img\" aria-label=\"mortar_board\">üéì</span>\n          <span role=\"img\" aria-label=\"computer\">üíª</span>\n        </Link>\n      </h1>\n      <nav className={HeaderStyles.nav}>\n        <div className={HeaderStyles.nav__item}><Link to=\"/tags/js\">JavaScript</Link></div>\n        <div className={HeaderStyles.nav__item}><Link to=\"/tags/react\">React</Link></div>\n        <div className={HeaderStyles.nav__item}><Link to=\"/tags/redux\">Redux</Link></div>\n\t\t\t\t<div className={HeaderStyles.nav__item}><Link to=\"/about\">About</Link></div>\n      </nav>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport LayoutStyles from \"./layout.module.scss\"\nimport Header from \"./header\"\n\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <div className={`markdown-body ${LayoutStyles.layout}`}>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div className={LayoutStyles.content}>\n        <main className={LayoutStyles.content__posts}>{children}</main>\n        <footer>\n          ¬© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Layout from \"../components/layout\"\n// Components\nimport { Link, graphql } from \"gatsby\"\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMdx\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`\n\n  return (\n    <Layout>\n      <h3>{tagHeader}</h3>\n\n      <div>\n        {edges.map(({ node, index }) => {\n          return (\n            <div>\n              <Link key={index} to={node.fields.slug}>\n                {node.frontmatter.title}\n              </Link>\n              <p>{node.frontmatter.date}</p>\n            </div>\n          )\n        })}\n\n        <Link to=\"/tags\">All tags</Link>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMdx(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            tags\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}
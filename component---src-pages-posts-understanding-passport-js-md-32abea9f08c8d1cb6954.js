(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{ZyDG:function(e,a,t){"use strict";t.r(a),t.d(a,"_frontmatter",(function(){return c})),t.d(a,"default",(function(){return l}));t("rzGZ"),t("Dq+y"),t("8npG"),t("Ggvi"),t("E5k/"),t("q1tI");var s=t("7ljp");var c={title:"Разбираемся с процессом авторизации в passport.js",date:"2020-10-04",tags:["js"]},n={_frontmatter:c},m="wrapper";function l(e){var a=e.components,t=function(e,a){if(null==e)return{};var t,s,c={},n=Object.keys(e);for(s=0;s<n.length;s++)t=n[s],a.indexOf(t)>=0||(c[t]=e[t]);return c}(e,["components"]);return Object(s.mdx)(m,Object.assign({},n,t,{components:a,mdxType:"MDXLayout"}),Object(s.mdx)("h1",null,"Разбираемся с процессом авторизации в ",Object(s.mdx)("code",Object.assign({parentName:"h1"},{className:"language-text"}),"passport.js")),Object(s.mdx)("p",null,"Перевод статьи ",Object(s.mdx)("a",Object.assign({parentName:"p"},{href:"http://toon.io/understanding-passportjs-authentication-flow/"}),"Understanding passport.js authentication flow")),Object(s.mdx)("p",null,"Passport.js - миддлвар для авторизации (позволяющий пользователям логиниться), кооторый может быть полностью кастомизирован и отлично работает в связке с connect/express."),Object(s.mdx)("p",null,"Он является довольно гибким в том смысле, что позволяет использовать разные стратегии авторизации (допустим через Twitter, или с помощью собственной базы данных - за счет установки отдельных модулей и их комбинирования), а также ",Object(s.mdx)("strong",{parentName:"p"},"passport.js")," позволяет определить маршрут или вывод результата авторизации."),Object(s.mdx)("p",null,"Стратегия ",Object(s.mdx)("strong",{parentName:"p"},Object(s.mdx)("code",Object.assign({parentName:"strong"},{className:"language-text"}),"Local Strategy"))," позволяет пользователям авторизоваться, используя базу данных приложения. Для этих случаев есть несколько отличных примеров."),Object(s.mdx)("p",null,"В этой статье, мы разберемся с процессом авторизации, а в следующей разберем несколько практических сценариев использования ",Object(s.mdx)("strong",{parentName:"p"},Object(s.mdx)("code",Object.assign({parentName:"strong"},{className:"language-text"}),"passportjs")),"."),Object(s.mdx)("h2",null,"Основные моменты при использовании ",Object(s.mdx)("code",Object.assign({parentName:"h2"},{className:"language-text"}),"passport.js")),Object(s.mdx)("p",null,"Есть 3 момента при использовании ",Object(s.mdx)("strong",{parentName:"p"},Object(s.mdx)("code",Object.assign({parentName:"strong"},{className:"language-text"}),"passport.js")),":"),Object(s.mdx)("ol",null,Object(s.mdx)("li",{parentName:"ol"},"Импортируем модуль и вызываем методы ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"passport.initialize()")," и ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"passport.session()")," для миддлвары express."),Object(s.mdx)("li",{parentName:"ol"},"Настраиваем для ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"passport")," хотя бы одну стратегию ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"Strategy")," и подключаем методы ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"passport")," ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"serializeUser")," and ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"deserializeUser"),"."),Object(s.mdx)("li",{parentName:"ol"},"Определяем маршрут, в котором будем использовать миддлвар ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"passport.authenticate")," непосредственно для авторизации пользователя.")),Object(s.mdx)("p",null,"Примеры в документации достаточно ясно показывают использование этих методов. Поэтому,подробнее здесь мы их не рассматриваем."),Object(s.mdx)("h2",null,"Процесс запроса на авторизацию"),Object(s.mdx)("p",null,"Итак, если мы верно настроили ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"passportjs"),", согласно примеру выше, то при попытке пользователя авторизоваться по маршруту ",Object(s.mdx)("a",Object.assign({parentName:"p"},{href:"/dev-docs/login"}),"/login"),", произойдет следующее:"),Object(s.mdx)("ul",null,Object(s.mdx)("li",{parentName:"ul"},"Когда пользователь отправит данные формы авторизации, ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"POST")," запрос к маршруту ",Object(s.mdx)("a",Object.assign({parentName:"li"},{href:"/dev-docs/login"}),"/login")," вызовет выполнение мидлвар ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"passport.authenticate"),", который мы подключили.\n"),Object(s.mdx)("li",{parentName:"ul"},"Поскольку миддлвар авторизации для этого маршрута настроен на использование стратегии ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"LocalStrategy"),", ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"passport")," вызовет нашу реализацию ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"LocalStrategy"),".\n"),Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"Passport")," возьмет из запроса ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"req.body.username")," и ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"req.body.password")," и передаст их нашей функции проверки авторизации в ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"LocalStrategy"),".\n"),Object(s.mdx)("li",{parentName:"ul"},"Теперь займемся своими делами: загрузим данные пользователя из базы данных и проверим совпадают ли пароли.\n")),Object(s.mdx)("p",null,"В случае если при взаимодействии с базой данных сработает ошибка, нам нужно передать ее методу ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"done(err)"),". "),Object(s.mdx)("p",null,"Когда мы не можем найти пользователя или пароли не совпали, мы вызываем ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"done(null, false)"),". "),Object(s.mdx)("p",null,"Если же все прошло хорошо, и мы хотим залогинить пользователя, вызываем ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"done(null, user)"),"."),Object(s.mdx)("p",null,"Вызов ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"done")," позволит последовательности авторизации перепрыгнуть обратно в ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"passport.authenticate"),". Передаются ошибка ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"error"),", ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"user")," и объект с дополнительной информацией (если он был определен)."),Object(s.mdx)("p",null,"Если объект ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"user")," был передан, миддлвар  вызовет ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"req.login")," (метод ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"passport"),", добавленный к запросу ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"request"),")."),Object(s.mdx)("p",null,"Это приведет к вызову  метода ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"passport.serializeUser"),", который мы определили ранее. "),Object(s.mdx)("p",null,"Этот метод имеет доступ к объекту ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"user"),", который мы передали в миддлвар."),Object(s.mdx)("p",null,"Его работа заключается в том, чтобы определить, какие данные объекта ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"user")," должны быть записаны в сессии ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"session"),". "),Object(s.mdx)("p",null,"Результат выполнения метода ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"serializeUser")," прикрепляется к сессии: "),Object(s.mdx)("div",{className:"gatsby-highlight","data-language":"js"},Object(s.mdx)("pre",Object.assign({parentName:"div"},{className:"language-js"}),Object(s.mdx)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"req",Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),"session",Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),"passport",Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),"user ",Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{")," ",Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token comment"}),"// our serialised user object // }.")))),Object(s.mdx)("p",null,"Результат также прикреплен к запросу: ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"req.user"),"."),Object(s.mdx)("p",null,"Когда все это выполнено, вызывается наш обработчик запросов ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"requestHandler"),". В данном примере поьзоватеь будет перенаправлен на стартовую страницу."),Object(s.mdx)("h2",null,"Последовательность последующих запросов авторизации"),Object(s.mdx)("p",null,"При последующих запросах, произодет следующее:"),Object(s.mdx)("ul",null,Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("p",{parentName:"li"},Object(s.mdx)("strong",{parentName:"p"},"Express")," загрузит данные сессии и прикрепит их к запросу ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"req"),". Так как ",Object(s.mdx)("strong",{parentName:"p"},"passport")," записал выбранные данные пользователя в сессию, сериализованный объект ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"user")," можно будет найти в ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"req.session.passport.user"),".")),Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("p",{parentName:"li"},"Основной миддлвар ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"passport"),", который мы настроили (",Object(s.mdx)("strong",{parentName:"p"},Object(s.mdx)("code",Object.assign({parentName:"strong"},{className:"language-text"}),"passport.initialize")),") будет вызван при запросе, он найдет ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"passport.user")," прикрепленный к сессии. Если он отсутствует (пользователь еще не авторизовался), то будет создан в следующем виде: ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"req.passport.user = {}"),".")),Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("p",{parentName:"li"},"Затем, будет вызван ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"passport.session"),". Этот миддлвар - часть стратегии ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"Passport Strategy"),", вызываемой при каждом запросе. Если он найдет сериализованный объект пользователя ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"user")," в сессии, он решит, что запрос ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"request")," авторизован.")),Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("p",{parentName:"li"},"Миддлвар ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"passport.session")," вызовет ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"passport.deserializeUser"),", который мы добавили ранее. Тем самым, прикрепляя загруженный объект ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"user")," к запросу в виде ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"req.user"),"."))),Object(s.mdx)("h2",null,"Итого: все методы и мидллвары ",Object(s.mdx)("code",Object.assign({parentName:"h2"},{className:"language-text"}),"passport")),Object(s.mdx)("ol",null,Object(s.mdx)("li",{parentName:"ol"},Object(s.mdx)("p",{parentName:"li"},Object(s.mdx)("strong",{parentName:"p"},Object(s.mdx)("code",Object.assign({parentName:"strong"},{className:"language-text"}),"passport.initialize"))," миддлвар вызывается на каждый запрос. Убеждается что сессия содержит ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"passport.user objec t"),", который может быть пустым.")),Object(s.mdx)("li",{parentName:"ol"},Object(s.mdx)("p",{parentName:"li"},Object(s.mdx)("strong",{parentName:"p"},Object(s.mdx)("code",Object.assign({parentName:"strong"},{className:"language-text"}),"passport.session"))," миддлвар - часть стратегии ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"Passport Strategy"),": загружает объект пользователя ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"user")," в ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"req.user")," , если сериализованный объект найден на сервере.")),Object(s.mdx)("li",{parentName:"ol"},Object(s.mdx)("p",{parentName:"li"},Object(s.mdx)("strong",{parentName:"p"},Object(s.mdx)("code",Object.assign({parentName:"strong"},{className:"language-text"}),"passport.deserializeUser"))," вызывается на каждый запрос из миддлвара ",Object(s.mdx)("strong",{parentName:"p"},Object(s.mdx)("code",Object.assign({parentName:"strong"},{className:"language-text"}),"passport.session")),". Это позволяет нам подгружать дополнительную информацию поьзователя при каждом запросе. Этот объект пользователя ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"user")," будет прикреплен к запросу в виде ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"req.user"),", чтобы можно было получить к нему доступ при обработке запросов.")),Object(s.mdx)("li",{parentName:"ol"},Object(s.mdx)("p",{parentName:"li"},"Наша локальная стратегия ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"Local Strategy")," вызывается только при использовании маршрута который содержит миддлвар ",Object(s.mdx)("strong",{parentName:"p"},Object(s.mdx)("code",Object.assign({parentName:"strong"},{className:"language-text"}),"passport.authenticate")),".")),Object(s.mdx)("li",{parentName:"ol"},Object(s.mdx)("p",{parentName:"li"},"Только при авторизации вызывается ",Object(s.mdx)("strong",{parentName:"p"},Object(s.mdx)("code",Object.assign({parentName:"strong"},{className:"language-text"}),"passport.serializeUser"))," позволяя нам определить какая информция пользователя будет записана в сессии."))),Object(s.mdx)("h4",null,"Методы ",Object(s.mdx)("code",Object.assign({parentName:"h4"},{className:"language-text"}),"passport")," прикрепленные к запросу  ",Object(s.mdx)("code",Object.assign({parentName:"h4"},{className:"language-text"}),"request")),Object(s.mdx)("p",null,"Ну и наконец обзор методов ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"passport")," доступных внутри обработчиков запросов:"),Object(s.mdx)("ul",null,Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"req.login()")),Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"req.logout()")),Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"req.isAuthenticated()")),Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"req.isUnAuthenticated()"))))}l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-posts-understanding-passport-js-md-32abea9f08c8d1cb6954.js.map